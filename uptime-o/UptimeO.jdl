entity Schedule (schedules) {
  name String required minlength(1) maxlength(50)
  interval Integer required min(1)
  includeResponseBody Boolean
  thresholdsWarning Integer
  thresholdsCritical Integer
}

entity HttpMonitor (api_monitors) {
  name String required minlength(1) maxlength(100)
  method String required minlength(1) maxlength(10)
  type String required minlength(1) maxlength(10)
  url TextBlob required
  headers TextBlob
  body TextBlob
}

entity Region (regions) {
  name String required minlength(1) maxlength(50)
  regionCode String maxlength(20)
  groupName String maxlength(20)
}

entity Datacenter (datacenters) {
  code String required minlength(1) maxlength(10)
  name String required minlength(1) maxlength(50)
}

entity Agent (agents) {
  name String required minlength(1) maxlength(50)
}

entity ApiHeartbeat (api_heartbeats) {
  executedAt Instant required
  success Boolean
  responseTimeMs Integer
  responseSizeBytes Integer
  responseStatusCode Integer
  responseContentType String maxlength(50)
  responseServer String maxlength(50)
  responseCacheStatus String maxlength(50)
  dnsLookupMs Integer
  tcpConnectMs Integer
  tlsHandshakeMs Integer
  timeToFirstByteMs Integer
  warningThresholdMs Integer
  criticalThresholdMs Integer
  errorType String maxlength(50)
  errorMessage TextBlob
  rawRequestHeaders TextBlob
  rawResponseHeaders TextBlob
  rawResponseBody TextBlob
}

entity AuditLog (audit_logs) {
  action String required minlength(1) maxlength(100)
  entityName String required minlength(1) maxlength(100)
  entityId Long required
  oldValue TextBlob
  newValue TextBlob
  timestamp Instant required
  ipAddress String maxlength(45)
  userAgent TextBlob
}

entity DatacenterMonitor (datacenter_monitors) {
  datacenterId Long required
  monitorId Long required
}

relationship OneToMany {
  Schedule{apiMonitor} to HttpMonitor{schedule}
}

relationship OneToMany {
  Region{datacenter} to Datacenter{region}
}

relationship OneToMany {
  Datacenter{agent} to Agent{datacenter}
}

relationship OneToMany {
  HttpMonitor{apiHeartbeat} to ApiHeartbeat{monitor}
}

relationship OneToMany {
  Agent{apiHeartbeat} to ApiHeartbeat{agent}
}

relationship OneToMany {
  Datacenter{datacenterMonitor(datacenterId)} to DatacenterMonitor{datacenter(datacenterId)}
}

relationship OneToMany {
  HttpMonitor{datacenterMonitor(monitorId)} to DatacenterMonitor{monitor(monitorId)}
}

relationship ManyToOne {
  AuditLog{user} to User with builtInEntity
}

paginate HttpMonitor, ApiHeartbeat with pagination
paginate Schedule, Region, Datacenter, Agent with pagination
paginate AuditLog with pagination

dto * with mapstruct

// Services
service HttpMonitor, ApiHeartbeat with serviceClass
service Schedule, Region, Datacenter, Agent with serviceImpl
service AuditLog with serviceClass

// Custom repository for ApiHeartbeat if needed
// repository ApiHeartbeat with custom
