name: Uptime-O App CI/CD Pipeline
permissions:
  contents: read
  packages: write
  id-token: write

on:
  workflow_dispatch:

jobs:
  pipeline:
    name: workflows pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    env:
      NODE_VERSION: 22.15.0
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
      NG_CLI_ANALYTICS: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.15.0
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 17
      - name: Install Node.js packages
        run: |
          cd uptime-o
          npm install
      - name: Run backend test
        run: |
          cd uptime-o
          chmod +x mvnw
          npm run ci:backend:test
      - name: Run frontend test
        run: |
          cd uptime-o
          npm run ci:frontend:test
      - name: Package application
        run: |
          cd uptime-o
          npm run java:jar:prod
      - name: Build Docker image locally
        run: |
          cd uptime-o
          ./mvnw -ntp verify -DskipTests -Pprod jib:dockerBuild
      - name: Tag Docker image for GHCR
        run: |
          docker tag uptimeo ghcr.io/${{ github.repository_owner }}/uptime-o-app:latest
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/uptime-o-app:latest
