package uptime.observability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DatacenterMonitorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterMonitorAllPropertiesEquals(DatacenterMonitor expected, DatacenterMonitor actual) {
        assertDatacenterMonitorAutoGeneratedPropertiesEquals(expected, actual);
        assertDatacenterMonitorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterMonitorAllUpdatablePropertiesEquals(DatacenterMonitor expected, DatacenterMonitor actual) {
        assertDatacenterMonitorUpdatableFieldsEquals(expected, actual);
        assertDatacenterMonitorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterMonitorAutoGeneratedPropertiesEquals(DatacenterMonitor expected, DatacenterMonitor actual) {
        assertThat(actual)
            .as("Verify DatacenterMonitor auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterMonitorUpdatableFieldsEquals(DatacenterMonitor expected, DatacenterMonitor actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterMonitorUpdatableRelationshipsEquals(DatacenterMonitor expected, DatacenterMonitor actual) {
        assertThat(actual)
            .as("Verify DatacenterMonitor relationships")
            .satisfies(a -> assertThat(a.getDatacenter()).as("check datacenter").isEqualTo(expected.getDatacenter()))
            .satisfies(a -> assertThat(a.getMonitor()).as("check monitor").isEqualTo(expected.getMonitor()));
    }
}
