package uptime.observability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DatacenterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterAllPropertiesEquals(Datacenter expected, Datacenter actual) {
        assertDatacenterAutoGeneratedPropertiesEquals(expected, actual);
        assertDatacenterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterAllUpdatablePropertiesEquals(Datacenter expected, Datacenter actual) {
        assertDatacenterUpdatableFieldsEquals(expected, actual);
        assertDatacenterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterAutoGeneratedPropertiesEquals(Datacenter expected, Datacenter actual) {
        assertThat(actual)
            .as("Verify Datacenter auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterUpdatableFieldsEquals(Datacenter expected, Datacenter actual) {
        assertThat(actual)
            .as("Verify Datacenter relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDatacenterUpdatableRelationshipsEquals(Datacenter expected, Datacenter actual) {
        assertThat(actual)
            .as("Verify Datacenter relationships")
            .satisfies(a -> assertThat(a.getRegion()).as("check region").isEqualTo(expected.getRegion()));
    }
}
