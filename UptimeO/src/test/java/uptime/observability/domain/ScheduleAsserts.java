package uptime.observability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ScheduleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleAllPropertiesEquals(Schedule expected, Schedule actual) {
        assertScheduleAutoGeneratedPropertiesEquals(expected, actual);
        assertScheduleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleAllUpdatablePropertiesEquals(Schedule expected, Schedule actual) {
        assertScheduleUpdatableFieldsEquals(expected, actual);
        assertScheduleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleAutoGeneratedPropertiesEquals(Schedule expected, Schedule actual) {
        assertThat(actual)
            .as("Verify Schedule auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleUpdatableFieldsEquals(Schedule expected, Schedule actual) {
        assertThat(actual)
            .as("Verify Schedule relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getInterval()).as("check interval").isEqualTo(expected.getInterval()))
            .satisfies(a ->
                assertThat(a.getIncludeResponseBody()).as("check includeResponseBody").isEqualTo(expected.getIncludeResponseBody())
            )
            .satisfies(a -> assertThat(a.getThresholdsWarning()).as("check thresholdsWarning").isEqualTo(expected.getThresholdsWarning()))
            .satisfies(a -> assertThat(a.getThresholdsCritical()).as("check thresholdsCritical").isEqualTo(expected.getThresholdsCritical())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduleUpdatableRelationshipsEquals(Schedule expected, Schedule actual) {
        // empty method
    }
}
