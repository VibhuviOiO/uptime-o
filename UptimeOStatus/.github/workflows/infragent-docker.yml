name: Build and Publish Infragent
permissions:
  contents: read
  packages: write
  id-token: write
on:
  push:
    branches:
      - main
      - release-*
    paths:
      - 'infragent/**'
  pull_request:
    paths:
      - 'infragent/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: infragent

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase organization name
        id: lowercase
        run: |
          echo "org_lower=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.lowercase.outputs.org_lower }}/${{ env.IMAGE_NAME }}
          tags: |
            # latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            
            # semantic version tags for release branches
            type=ref,event=branch,prefix=v,suffix=,pattern=release-(\d+\.\d+\.\d+),group=1
            
            # short commit hash for PRs and development
            type=sha,prefix={{branch}}-,format=short
            
            # branch name for feature branches
            type=ref,event=branch
            
            # PR number for pull requests  
            type=ref,event=pr,prefix=pr-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./infragent
          file: ./infragent/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max